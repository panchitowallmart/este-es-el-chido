
proyectoooo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000028  00800100  00000aa0  00000b14  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000aa0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000b3c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000b98  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000098  00000000  00000000  00000bd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a77  00000000  00000000  00000c70  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000844  00000000  00000000  000016e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004d7  00000000  00000000  00001f2b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000dc  00000000  00000000  00002404  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000425  00000000  00000000  000024e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000030b  00000000  00000000  00002905  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  00002c10  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 ea       	ldi	r30, 0xA0	; 160
  7c:	fa e0       	ldi	r31, 0x0A	; 10
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 32       	cpi	r26, 0x28	; 40
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 be 00 	call	0x17c	; 0x17c <main>
  8e:	0c 94 4e 05 	jmp	0xa9c	; 0xa9c <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <ADC_init>:

#include "ADC.h"
#include <avr/io.h>

void ADC_init() {
	ADMUX = (1 << REFS0); // Usa AVcc como referencia
  96:	80 e4       	ldi	r24, 0x40	; 64
  98:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
	ADCSRA = (1 << ADEN) | (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0); // Habilita el ADC, con preescalador de 128
  9c:	87 e8       	ldi	r24, 0x87	; 135
  9e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  a2:	08 95       	ret

000000a4 <ADC_read>:
}

int ADC_read(int pin) {
	ADMUX = (ADMUX & 0xF8) | (pin & 0x07); // Selecciona el canal ADC
  a4:	ec e7       	ldi	r30, 0x7C	; 124
  a6:	f0 e0       	ldi	r31, 0x00	; 0
  a8:	90 81       	ld	r25, Z
  aa:	98 7f       	andi	r25, 0xF8	; 248
  ac:	87 70       	andi	r24, 0x07	; 7
  ae:	89 2b       	or	r24, r25
  b0:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADSC); // Inicia la conversión
  b2:	ea e7       	ldi	r30, 0x7A	; 122
  b4:	f0 e0       	ldi	r31, 0x00	; 0
  b6:	80 81       	ld	r24, Z
  b8:	80 64       	ori	r24, 0x40	; 64
  ba:	80 83       	st	Z, r24
	while (ADCSRA & (1 << ADSC)); // Espera a que la conversión finalice
  bc:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  c0:	86 fd       	sbrc	r24, 6
  c2:	fc cf       	rjmp	.-8      	; 0xbc <ADC_read+0x18>
	return ADCW; // Devuelve el resultado
  c4:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
  c8:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
}
  cc:	08 95       	ret

000000ce <ADC_convertToVoltage>:

float ADC_convertToVoltage(int value) {
	return (value * 5.0) / 1023.0; // Convierte el valor del ADC a voltaje
  ce:	bc 01       	movw	r22, r24
  d0:	99 0f       	add	r25, r25
  d2:	88 0b       	sbc	r24, r24
  d4:	99 0b       	sbc	r25, r25
  d6:	0e 94 5d 01 	call	0x2ba	; 0x2ba <__floatsisf>
  da:	20 e0       	ldi	r18, 0x00	; 0
  dc:	30 e0       	ldi	r19, 0x00	; 0
  de:	40 ea       	ldi	r20, 0xA0	; 160
  e0:	50 e4       	ldi	r21, 0x40	; 64
  e2:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <__mulsf3>
  e6:	20 e0       	ldi	r18, 0x00	; 0
  e8:	30 ec       	ldi	r19, 0xC0	; 192
  ea:	4f e7       	ldi	r20, 0x7F	; 127
  ec:	54 e4       	ldi	r21, 0x44	; 68
  ee:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <__divsf3>
}
  f2:	08 95       	ret

000000f4 <processCommand>:
#include "Commands.h"
#include "USART.h"
#include "ADC.h"
#include <stdio.h>

void processCommand(char command, int potPin1, int potPin2) {
  f4:	0f 93       	push	r16
  f6:	1f 93       	push	r17
  f8:	cf 93       	push	r28
  fa:	df 93       	push	r29
  fc:	cd b7       	in	r28, 0x3d	; 61
  fe:	de b7       	in	r29, 0x3e	; 62
 100:	64 97       	sbiw	r28, 0x14	; 20
 102:	0f b6       	in	r0, 0x3f	; 63
 104:	f8 94       	cli
 106:	de bf       	out	0x3e, r29	; 62
 108:	0f be       	out	0x3f, r0	; 63
 10a:	cd bf       	out	0x3d, r28	; 61
	int potValue;
	char buffer[20];

	if (command == '1') {
 10c:	81 33       	cpi	r24, 0x31	; 49
 10e:	21 f4       	brne	.+8      	; 0x118 <processCommand+0x24>
		potValue = ADC_read(potPin1);  // Lee el valor del primer potenciómetro
 110:	cb 01       	movw	r24, r22
 112:	0e 94 52 00 	call	0xa4	; 0xa4 <ADC_read>
 116:	0b c0       	rjmp	.+22     	; 0x12e <processCommand+0x3a>
		} else if (command == '2') {
 118:	82 33       	cpi	r24, 0x32	; 50
 11a:	21 f4       	brne	.+8      	; 0x124 <processCommand+0x30>
		potValue = ADC_read(potPin2);  // Lee el valor del segundo potenciómetro
 11c:	ca 01       	movw	r24, r20
 11e:	0e 94 52 00 	call	0xa4	; 0xa4 <ADC_read>
 122:	05 c0       	rjmp	.+10     	; 0x12e <processCommand+0x3a>
		} else {
		USART_sendData("Comando no reconocido\n");
 124:	80 e0       	ldi	r24, 0x00	; 0
 126:	91 e0       	ldi	r25, 0x01	; 1
 128:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <USART_sendData>
 12c:	1c c0       	rjmp	.+56     	; 0x166 <processCommand+0x72>
		return;
	}

	// Convierte el valor del potenciómetro a voltaje y envía la respuesta
	float voltage = ADC_convertToVoltage(potValue);
 12e:	0e 94 67 00 	call	0xce	; 0xce <ADC_convertToVoltage>
	snprintf(buffer, sizeof(buffer), "Voltaje: %.2f V\n", voltage);
 132:	9f 93       	push	r25
 134:	8f 93       	push	r24
 136:	7f 93       	push	r23
 138:	6f 93       	push	r22
 13a:	87 e1       	ldi	r24, 0x17	; 23
 13c:	91 e0       	ldi	r25, 0x01	; 1
 13e:	9f 93       	push	r25
 140:	8f 93       	push	r24
 142:	1f 92       	push	r1
 144:	84 e1       	ldi	r24, 0x14	; 20
 146:	8f 93       	push	r24
 148:	8e 01       	movw	r16, r28
 14a:	0f 5f       	subi	r16, 0xFF	; 255
 14c:	1f 4f       	sbci	r17, 0xFF	; 255
 14e:	1f 93       	push	r17
 150:	0f 93       	push	r16
 152:	0e 94 56 02 	call	0x4ac	; 0x4ac <snprintf>
	USART_sendData(buffer);
 156:	c8 01       	movw	r24, r16
 158:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <USART_sendData>
 15c:	0f b6       	in	r0, 0x3f	; 63
 15e:	f8 94       	cli
 160:	de bf       	out	0x3e, r29	; 62
 162:	0f be       	out	0x3f, r0	; 63
 164:	cd bf       	out	0x3d, r28	; 61
}
 166:	64 96       	adiw	r28, 0x14	; 20
 168:	0f b6       	in	r0, 0x3f	; 63
 16a:	f8 94       	cli
 16c:	de bf       	out	0x3e, r29	; 62
 16e:	0f be       	out	0x3f, r0	; 63
 170:	cd bf       	out	0x3d, r28	; 61
 172:	df 91       	pop	r29
 174:	cf 91       	pop	r28
 176:	1f 91       	pop	r17
 178:	0f 91       	pop	r16
 17a:	08 95       	ret

0000017c <main>:

#define POT1 0  // Pin A0
#define POT2 1  // Pin A1

int main(void) {
	USART_init(9600);   // Inicializa USART a 9600 bps
 17c:	80 e8       	ldi	r24, 0x80	; 128
 17e:	95 e2       	ldi	r25, 0x25	; 37
 180:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <USART_init>
	ADC_init();         // Inicializa el ADC
 184:	0e 94 4b 00 	call	0x96	; 0x96 <ADC_init>

	while (1) {
		if (UCSR0A & (1 << RXC0)) {  // Verifica si hay un comando recibido
 188:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 18c:	88 23       	and	r24, r24
 18e:	e4 f7       	brge	.-8      	; 0x188 <main+0xc>
			char command = UDR0;
 190:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
			processCommand(command, POT1, POT2);  // Procesa el comando
 194:	41 e0       	ldi	r20, 0x01	; 1
 196:	50 e0       	ldi	r21, 0x00	; 0
 198:	60 e0       	ldi	r22, 0x00	; 0
 19a:	70 e0       	ldi	r23, 0x00	; 0
 19c:	0e 94 7a 00 	call	0xf4	; 0xf4 <processCommand>
 1a0:	f3 cf       	rjmp	.-26     	; 0x188 <main+0xc>

000001a2 <USART_init>:

#include "USART.h"
#include <avr/io.h>

void USART_init(unsigned int ubrr) {
	UBRR0H = (unsigned char)(ubrr >> 8);
 1a2:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (unsigned char)ubrr;
 1a6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	UCSR0B = (1 << RXEN0) | (1 << TXEN0); // Habilita RX y TX
 1aa:	88 e1       	ldi	r24, 0x18	; 24
 1ac:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00); // Configura 8 bits de datos y 1 bit de parada
 1b0:	86 e0       	ldi	r24, 0x06	; 6
 1b2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 1b6:	08 95       	ret

000001b8 <USART_sendData>:
}

void USART_sendData(const char *data) {
 1b8:	fc 01       	movw	r30, r24
	while (*data) {
 1ba:	07 c0       	rjmp	.+14     	; 0x1ca <USART_sendData+0x12>
		while (!(UCSR0A & (1 << UDRE0))); // Espera a que el registro de datos esté vacío
 1bc:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 1c0:	95 ff       	sbrs	r25, 5
 1c2:	fc cf       	rjmp	.-8      	; 0x1bc <USART_sendData+0x4>
		UDR0 = *data; // Envía el dato
 1c4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
		data++;
 1c8:	31 96       	adiw	r30, 0x01	; 1
	UCSR0B = (1 << RXEN0) | (1 << TXEN0); // Habilita RX y TX
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00); // Configura 8 bits de datos y 1 bit de parada
}

void USART_sendData(const char *data) {
	while (*data) {
 1ca:	80 81       	ld	r24, Z
 1cc:	81 11       	cpse	r24, r1
 1ce:	f6 cf       	rjmp	.-20     	; 0x1bc <USART_sendData+0x4>
		while (!(UCSR0A & (1 << UDRE0))); // Espera a que el registro de datos esté vacío
		UDR0 = *data; // Envía el dato
		data++;
	}
}
 1d0:	08 95       	ret

000001d2 <__divsf3>:
 1d2:	0e 94 fd 00 	call	0x1fa	; 0x1fa <__divsf3x>
 1d6:	0c 94 af 01 	jmp	0x35e	; 0x35e <__fp_round>
 1da:	0e 94 a8 01 	call	0x350	; 0x350 <__fp_pscB>
 1de:	58 f0       	brcs	.+22     	; 0x1f6 <__divsf3+0x24>
 1e0:	0e 94 a1 01 	call	0x342	; 0x342 <__fp_pscA>
 1e4:	40 f0       	brcs	.+16     	; 0x1f6 <__divsf3+0x24>
 1e6:	29 f4       	brne	.+10     	; 0x1f2 <__divsf3+0x20>
 1e8:	5f 3f       	cpi	r21, 0xFF	; 255
 1ea:	29 f0       	breq	.+10     	; 0x1f6 <__divsf3+0x24>
 1ec:	0c 94 98 01 	jmp	0x330	; 0x330 <__fp_inf>
 1f0:	51 11       	cpse	r21, r1
 1f2:	0c 94 e3 01 	jmp	0x3c6	; 0x3c6 <__fp_szero>
 1f6:	0c 94 9e 01 	jmp	0x33c	; 0x33c <__fp_nan>

000001fa <__divsf3x>:
 1fa:	0e 94 c0 01 	call	0x380	; 0x380 <__fp_split3>
 1fe:	68 f3       	brcs	.-38     	; 0x1da <__divsf3+0x8>

00000200 <__divsf3_pse>:
 200:	99 23       	and	r25, r25
 202:	b1 f3       	breq	.-20     	; 0x1f0 <__divsf3+0x1e>
 204:	55 23       	and	r21, r21
 206:	91 f3       	breq	.-28     	; 0x1ec <__divsf3+0x1a>
 208:	95 1b       	sub	r25, r21
 20a:	55 0b       	sbc	r21, r21
 20c:	bb 27       	eor	r27, r27
 20e:	aa 27       	eor	r26, r26
 210:	62 17       	cp	r22, r18
 212:	73 07       	cpc	r23, r19
 214:	84 07       	cpc	r24, r20
 216:	38 f0       	brcs	.+14     	; 0x226 <__divsf3_pse+0x26>
 218:	9f 5f       	subi	r25, 0xFF	; 255
 21a:	5f 4f       	sbci	r21, 0xFF	; 255
 21c:	22 0f       	add	r18, r18
 21e:	33 1f       	adc	r19, r19
 220:	44 1f       	adc	r20, r20
 222:	aa 1f       	adc	r26, r26
 224:	a9 f3       	breq	.-22     	; 0x210 <__divsf3_pse+0x10>
 226:	35 d0       	rcall	.+106    	; 0x292 <__divsf3_pse+0x92>
 228:	0e 2e       	mov	r0, r30
 22a:	3a f0       	brmi	.+14     	; 0x23a <__divsf3_pse+0x3a>
 22c:	e0 e8       	ldi	r30, 0x80	; 128
 22e:	32 d0       	rcall	.+100    	; 0x294 <__divsf3_pse+0x94>
 230:	91 50       	subi	r25, 0x01	; 1
 232:	50 40       	sbci	r21, 0x00	; 0
 234:	e6 95       	lsr	r30
 236:	00 1c       	adc	r0, r0
 238:	ca f7       	brpl	.-14     	; 0x22c <__divsf3_pse+0x2c>
 23a:	2b d0       	rcall	.+86     	; 0x292 <__divsf3_pse+0x92>
 23c:	fe 2f       	mov	r31, r30
 23e:	29 d0       	rcall	.+82     	; 0x292 <__divsf3_pse+0x92>
 240:	66 0f       	add	r22, r22
 242:	77 1f       	adc	r23, r23
 244:	88 1f       	adc	r24, r24
 246:	bb 1f       	adc	r27, r27
 248:	26 17       	cp	r18, r22
 24a:	37 07       	cpc	r19, r23
 24c:	48 07       	cpc	r20, r24
 24e:	ab 07       	cpc	r26, r27
 250:	b0 e8       	ldi	r27, 0x80	; 128
 252:	09 f0       	breq	.+2      	; 0x256 <__divsf3_pse+0x56>
 254:	bb 0b       	sbc	r27, r27
 256:	80 2d       	mov	r24, r0
 258:	bf 01       	movw	r22, r30
 25a:	ff 27       	eor	r31, r31
 25c:	93 58       	subi	r25, 0x83	; 131
 25e:	5f 4f       	sbci	r21, 0xFF	; 255
 260:	3a f0       	brmi	.+14     	; 0x270 <__divsf3_pse+0x70>
 262:	9e 3f       	cpi	r25, 0xFE	; 254
 264:	51 05       	cpc	r21, r1
 266:	78 f0       	brcs	.+30     	; 0x286 <__divsf3_pse+0x86>
 268:	0c 94 98 01 	jmp	0x330	; 0x330 <__fp_inf>
 26c:	0c 94 e3 01 	jmp	0x3c6	; 0x3c6 <__fp_szero>
 270:	5f 3f       	cpi	r21, 0xFF	; 255
 272:	e4 f3       	brlt	.-8      	; 0x26c <__divsf3_pse+0x6c>
 274:	98 3e       	cpi	r25, 0xE8	; 232
 276:	d4 f3       	brlt	.-12     	; 0x26c <__divsf3_pse+0x6c>
 278:	86 95       	lsr	r24
 27a:	77 95       	ror	r23
 27c:	67 95       	ror	r22
 27e:	b7 95       	ror	r27
 280:	f7 95       	ror	r31
 282:	9f 5f       	subi	r25, 0xFF	; 255
 284:	c9 f7       	brne	.-14     	; 0x278 <__divsf3_pse+0x78>
 286:	88 0f       	add	r24, r24
 288:	91 1d       	adc	r25, r1
 28a:	96 95       	lsr	r25
 28c:	87 95       	ror	r24
 28e:	97 f9       	bld	r25, 7
 290:	08 95       	ret
 292:	e1 e0       	ldi	r30, 0x01	; 1
 294:	66 0f       	add	r22, r22
 296:	77 1f       	adc	r23, r23
 298:	88 1f       	adc	r24, r24
 29a:	bb 1f       	adc	r27, r27
 29c:	62 17       	cp	r22, r18
 29e:	73 07       	cpc	r23, r19
 2a0:	84 07       	cpc	r24, r20
 2a2:	ba 07       	cpc	r27, r26
 2a4:	20 f0       	brcs	.+8      	; 0x2ae <__divsf3_pse+0xae>
 2a6:	62 1b       	sub	r22, r18
 2a8:	73 0b       	sbc	r23, r19
 2aa:	84 0b       	sbc	r24, r20
 2ac:	ba 0b       	sbc	r27, r26
 2ae:	ee 1f       	adc	r30, r30
 2b0:	88 f7       	brcc	.-30     	; 0x294 <__divsf3_pse+0x94>
 2b2:	e0 95       	com	r30
 2b4:	08 95       	ret

000002b6 <__floatunsisf>:
 2b6:	e8 94       	clt
 2b8:	09 c0       	rjmp	.+18     	; 0x2cc <__floatsisf+0x12>

000002ba <__floatsisf>:
 2ba:	97 fb       	bst	r25, 7
 2bc:	3e f4       	brtc	.+14     	; 0x2cc <__floatsisf+0x12>
 2be:	90 95       	com	r25
 2c0:	80 95       	com	r24
 2c2:	70 95       	com	r23
 2c4:	61 95       	neg	r22
 2c6:	7f 4f       	sbci	r23, 0xFF	; 255
 2c8:	8f 4f       	sbci	r24, 0xFF	; 255
 2ca:	9f 4f       	sbci	r25, 0xFF	; 255
 2cc:	99 23       	and	r25, r25
 2ce:	a9 f0       	breq	.+42     	; 0x2fa <__floatsisf+0x40>
 2d0:	f9 2f       	mov	r31, r25
 2d2:	96 e9       	ldi	r25, 0x96	; 150
 2d4:	bb 27       	eor	r27, r27
 2d6:	93 95       	inc	r25
 2d8:	f6 95       	lsr	r31
 2da:	87 95       	ror	r24
 2dc:	77 95       	ror	r23
 2de:	67 95       	ror	r22
 2e0:	b7 95       	ror	r27
 2e2:	f1 11       	cpse	r31, r1
 2e4:	f8 cf       	rjmp	.-16     	; 0x2d6 <__floatsisf+0x1c>
 2e6:	fa f4       	brpl	.+62     	; 0x326 <__floatsisf+0x6c>
 2e8:	bb 0f       	add	r27, r27
 2ea:	11 f4       	brne	.+4      	; 0x2f0 <__floatsisf+0x36>
 2ec:	60 ff       	sbrs	r22, 0
 2ee:	1b c0       	rjmp	.+54     	; 0x326 <__floatsisf+0x6c>
 2f0:	6f 5f       	subi	r22, 0xFF	; 255
 2f2:	7f 4f       	sbci	r23, 0xFF	; 255
 2f4:	8f 4f       	sbci	r24, 0xFF	; 255
 2f6:	9f 4f       	sbci	r25, 0xFF	; 255
 2f8:	16 c0       	rjmp	.+44     	; 0x326 <__floatsisf+0x6c>
 2fa:	88 23       	and	r24, r24
 2fc:	11 f0       	breq	.+4      	; 0x302 <__floatsisf+0x48>
 2fe:	96 e9       	ldi	r25, 0x96	; 150
 300:	11 c0       	rjmp	.+34     	; 0x324 <__floatsisf+0x6a>
 302:	77 23       	and	r23, r23
 304:	21 f0       	breq	.+8      	; 0x30e <__floatsisf+0x54>
 306:	9e e8       	ldi	r25, 0x8E	; 142
 308:	87 2f       	mov	r24, r23
 30a:	76 2f       	mov	r23, r22
 30c:	05 c0       	rjmp	.+10     	; 0x318 <__floatsisf+0x5e>
 30e:	66 23       	and	r22, r22
 310:	71 f0       	breq	.+28     	; 0x32e <__floatsisf+0x74>
 312:	96 e8       	ldi	r25, 0x86	; 134
 314:	86 2f       	mov	r24, r22
 316:	70 e0       	ldi	r23, 0x00	; 0
 318:	60 e0       	ldi	r22, 0x00	; 0
 31a:	2a f0       	brmi	.+10     	; 0x326 <__floatsisf+0x6c>
 31c:	9a 95       	dec	r25
 31e:	66 0f       	add	r22, r22
 320:	77 1f       	adc	r23, r23
 322:	88 1f       	adc	r24, r24
 324:	da f7       	brpl	.-10     	; 0x31c <__floatsisf+0x62>
 326:	88 0f       	add	r24, r24
 328:	96 95       	lsr	r25
 32a:	87 95       	ror	r24
 32c:	97 f9       	bld	r25, 7
 32e:	08 95       	ret

00000330 <__fp_inf>:
 330:	97 f9       	bld	r25, 7
 332:	9f 67       	ori	r25, 0x7F	; 127
 334:	80 e8       	ldi	r24, 0x80	; 128
 336:	70 e0       	ldi	r23, 0x00	; 0
 338:	60 e0       	ldi	r22, 0x00	; 0
 33a:	08 95       	ret

0000033c <__fp_nan>:
 33c:	9f ef       	ldi	r25, 0xFF	; 255
 33e:	80 ec       	ldi	r24, 0xC0	; 192
 340:	08 95       	ret

00000342 <__fp_pscA>:
 342:	00 24       	eor	r0, r0
 344:	0a 94       	dec	r0
 346:	16 16       	cp	r1, r22
 348:	17 06       	cpc	r1, r23
 34a:	18 06       	cpc	r1, r24
 34c:	09 06       	cpc	r0, r25
 34e:	08 95       	ret

00000350 <__fp_pscB>:
 350:	00 24       	eor	r0, r0
 352:	0a 94       	dec	r0
 354:	12 16       	cp	r1, r18
 356:	13 06       	cpc	r1, r19
 358:	14 06       	cpc	r1, r20
 35a:	05 06       	cpc	r0, r21
 35c:	08 95       	ret

0000035e <__fp_round>:
 35e:	09 2e       	mov	r0, r25
 360:	03 94       	inc	r0
 362:	00 0c       	add	r0, r0
 364:	11 f4       	brne	.+4      	; 0x36a <__fp_round+0xc>
 366:	88 23       	and	r24, r24
 368:	52 f0       	brmi	.+20     	; 0x37e <__fp_round+0x20>
 36a:	bb 0f       	add	r27, r27
 36c:	40 f4       	brcc	.+16     	; 0x37e <__fp_round+0x20>
 36e:	bf 2b       	or	r27, r31
 370:	11 f4       	brne	.+4      	; 0x376 <__fp_round+0x18>
 372:	60 ff       	sbrs	r22, 0
 374:	04 c0       	rjmp	.+8      	; 0x37e <__fp_round+0x20>
 376:	6f 5f       	subi	r22, 0xFF	; 255
 378:	7f 4f       	sbci	r23, 0xFF	; 255
 37a:	8f 4f       	sbci	r24, 0xFF	; 255
 37c:	9f 4f       	sbci	r25, 0xFF	; 255
 37e:	08 95       	ret

00000380 <__fp_split3>:
 380:	57 fd       	sbrc	r21, 7
 382:	90 58       	subi	r25, 0x80	; 128
 384:	44 0f       	add	r20, r20
 386:	55 1f       	adc	r21, r21
 388:	59 f0       	breq	.+22     	; 0x3a0 <__fp_splitA+0x10>
 38a:	5f 3f       	cpi	r21, 0xFF	; 255
 38c:	71 f0       	breq	.+28     	; 0x3aa <__fp_splitA+0x1a>
 38e:	47 95       	ror	r20

00000390 <__fp_splitA>:
 390:	88 0f       	add	r24, r24
 392:	97 fb       	bst	r25, 7
 394:	99 1f       	adc	r25, r25
 396:	61 f0       	breq	.+24     	; 0x3b0 <__fp_splitA+0x20>
 398:	9f 3f       	cpi	r25, 0xFF	; 255
 39a:	79 f0       	breq	.+30     	; 0x3ba <__fp_splitA+0x2a>
 39c:	87 95       	ror	r24
 39e:	08 95       	ret
 3a0:	12 16       	cp	r1, r18
 3a2:	13 06       	cpc	r1, r19
 3a4:	14 06       	cpc	r1, r20
 3a6:	55 1f       	adc	r21, r21
 3a8:	f2 cf       	rjmp	.-28     	; 0x38e <__fp_split3+0xe>
 3aa:	46 95       	lsr	r20
 3ac:	f1 df       	rcall	.-30     	; 0x390 <__fp_splitA>
 3ae:	08 c0       	rjmp	.+16     	; 0x3c0 <__fp_splitA+0x30>
 3b0:	16 16       	cp	r1, r22
 3b2:	17 06       	cpc	r1, r23
 3b4:	18 06       	cpc	r1, r24
 3b6:	99 1f       	adc	r25, r25
 3b8:	f1 cf       	rjmp	.-30     	; 0x39c <__fp_splitA+0xc>
 3ba:	86 95       	lsr	r24
 3bc:	71 05       	cpc	r23, r1
 3be:	61 05       	cpc	r22, r1
 3c0:	08 94       	sec
 3c2:	08 95       	ret

000003c4 <__fp_zero>:
 3c4:	e8 94       	clt

000003c6 <__fp_szero>:
 3c6:	bb 27       	eor	r27, r27
 3c8:	66 27       	eor	r22, r22
 3ca:	77 27       	eor	r23, r23
 3cc:	cb 01       	movw	r24, r22
 3ce:	97 f9       	bld	r25, 7
 3d0:	08 95       	ret

000003d2 <__mulsf3>:
 3d2:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <__mulsf3x>
 3d6:	0c 94 af 01 	jmp	0x35e	; 0x35e <__fp_round>
 3da:	0e 94 a1 01 	call	0x342	; 0x342 <__fp_pscA>
 3de:	38 f0       	brcs	.+14     	; 0x3ee <__mulsf3+0x1c>
 3e0:	0e 94 a8 01 	call	0x350	; 0x350 <__fp_pscB>
 3e4:	20 f0       	brcs	.+8      	; 0x3ee <__mulsf3+0x1c>
 3e6:	95 23       	and	r25, r21
 3e8:	11 f0       	breq	.+4      	; 0x3ee <__mulsf3+0x1c>
 3ea:	0c 94 98 01 	jmp	0x330	; 0x330 <__fp_inf>
 3ee:	0c 94 9e 01 	jmp	0x33c	; 0x33c <__fp_nan>
 3f2:	11 24       	eor	r1, r1
 3f4:	0c 94 e3 01 	jmp	0x3c6	; 0x3c6 <__fp_szero>

000003f8 <__mulsf3x>:
 3f8:	0e 94 c0 01 	call	0x380	; 0x380 <__fp_split3>
 3fc:	70 f3       	brcs	.-36     	; 0x3da <__mulsf3+0x8>

000003fe <__mulsf3_pse>:
 3fe:	95 9f       	mul	r25, r21
 400:	c1 f3       	breq	.-16     	; 0x3f2 <__mulsf3+0x20>
 402:	95 0f       	add	r25, r21
 404:	50 e0       	ldi	r21, 0x00	; 0
 406:	55 1f       	adc	r21, r21
 408:	62 9f       	mul	r22, r18
 40a:	f0 01       	movw	r30, r0
 40c:	72 9f       	mul	r23, r18
 40e:	bb 27       	eor	r27, r27
 410:	f0 0d       	add	r31, r0
 412:	b1 1d       	adc	r27, r1
 414:	63 9f       	mul	r22, r19
 416:	aa 27       	eor	r26, r26
 418:	f0 0d       	add	r31, r0
 41a:	b1 1d       	adc	r27, r1
 41c:	aa 1f       	adc	r26, r26
 41e:	64 9f       	mul	r22, r20
 420:	66 27       	eor	r22, r22
 422:	b0 0d       	add	r27, r0
 424:	a1 1d       	adc	r26, r1
 426:	66 1f       	adc	r22, r22
 428:	82 9f       	mul	r24, r18
 42a:	22 27       	eor	r18, r18
 42c:	b0 0d       	add	r27, r0
 42e:	a1 1d       	adc	r26, r1
 430:	62 1f       	adc	r22, r18
 432:	73 9f       	mul	r23, r19
 434:	b0 0d       	add	r27, r0
 436:	a1 1d       	adc	r26, r1
 438:	62 1f       	adc	r22, r18
 43a:	83 9f       	mul	r24, r19
 43c:	a0 0d       	add	r26, r0
 43e:	61 1d       	adc	r22, r1
 440:	22 1f       	adc	r18, r18
 442:	74 9f       	mul	r23, r20
 444:	33 27       	eor	r19, r19
 446:	a0 0d       	add	r26, r0
 448:	61 1d       	adc	r22, r1
 44a:	23 1f       	adc	r18, r19
 44c:	84 9f       	mul	r24, r20
 44e:	60 0d       	add	r22, r0
 450:	21 1d       	adc	r18, r1
 452:	82 2f       	mov	r24, r18
 454:	76 2f       	mov	r23, r22
 456:	6a 2f       	mov	r22, r26
 458:	11 24       	eor	r1, r1
 45a:	9f 57       	subi	r25, 0x7F	; 127
 45c:	50 40       	sbci	r21, 0x00	; 0
 45e:	9a f0       	brmi	.+38     	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
 460:	f1 f0       	breq	.+60     	; 0x49e <__EEPROM_REGION_LENGTH__+0x9e>
 462:	88 23       	and	r24, r24
 464:	4a f0       	brmi	.+18     	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
 466:	ee 0f       	add	r30, r30
 468:	ff 1f       	adc	r31, r31
 46a:	bb 1f       	adc	r27, r27
 46c:	66 1f       	adc	r22, r22
 46e:	77 1f       	adc	r23, r23
 470:	88 1f       	adc	r24, r24
 472:	91 50       	subi	r25, 0x01	; 1
 474:	50 40       	sbci	r21, 0x00	; 0
 476:	a9 f7       	brne	.-22     	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
 478:	9e 3f       	cpi	r25, 0xFE	; 254
 47a:	51 05       	cpc	r21, r1
 47c:	80 f0       	brcs	.+32     	; 0x49e <__EEPROM_REGION_LENGTH__+0x9e>
 47e:	0c 94 98 01 	jmp	0x330	; 0x330 <__fp_inf>
 482:	0c 94 e3 01 	jmp	0x3c6	; 0x3c6 <__fp_szero>
 486:	5f 3f       	cpi	r21, 0xFF	; 255
 488:	e4 f3       	brlt	.-8      	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
 48a:	98 3e       	cpi	r25, 0xE8	; 232
 48c:	d4 f3       	brlt	.-12     	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
 48e:	86 95       	lsr	r24
 490:	77 95       	ror	r23
 492:	67 95       	ror	r22
 494:	b7 95       	ror	r27
 496:	f7 95       	ror	r31
 498:	e7 95       	ror	r30
 49a:	9f 5f       	subi	r25, 0xFF	; 255
 49c:	c1 f7       	brne	.-16     	; 0x48e <__EEPROM_REGION_LENGTH__+0x8e>
 49e:	fe 2b       	or	r31, r30
 4a0:	88 0f       	add	r24, r24
 4a2:	91 1d       	adc	r25, r1
 4a4:	96 95       	lsr	r25
 4a6:	87 95       	ror	r24
 4a8:	97 f9       	bld	r25, 7
 4aa:	08 95       	ret

000004ac <snprintf>:
 4ac:	ae e0       	ldi	r26, 0x0E	; 14
 4ae:	b0 e0       	ldi	r27, 0x00	; 0
 4b0:	ec e5       	ldi	r30, 0x5C	; 92
 4b2:	f2 e0       	ldi	r31, 0x02	; 2
 4b4:	0c 94 25 05 	jmp	0xa4a	; 0xa4a <__prologue_saves__+0x1c>
 4b8:	0d 89       	ldd	r16, Y+21	; 0x15
 4ba:	1e 89       	ldd	r17, Y+22	; 0x16
 4bc:	8f 89       	ldd	r24, Y+23	; 0x17
 4be:	98 8d       	ldd	r25, Y+24	; 0x18
 4c0:	26 e0       	ldi	r18, 0x06	; 6
 4c2:	2c 83       	std	Y+4, r18	; 0x04
 4c4:	1a 83       	std	Y+2, r17	; 0x02
 4c6:	09 83       	std	Y+1, r16	; 0x01
 4c8:	97 ff       	sbrs	r25, 7
 4ca:	02 c0       	rjmp	.+4      	; 0x4d0 <snprintf+0x24>
 4cc:	80 e0       	ldi	r24, 0x00	; 0
 4ce:	90 e8       	ldi	r25, 0x80	; 128
 4d0:	01 97       	sbiw	r24, 0x01	; 1
 4d2:	9e 83       	std	Y+6, r25	; 0x06
 4d4:	8d 83       	std	Y+5, r24	; 0x05
 4d6:	ae 01       	movw	r20, r28
 4d8:	45 5e       	subi	r20, 0xE5	; 229
 4da:	5f 4f       	sbci	r21, 0xFF	; 255
 4dc:	69 8d       	ldd	r22, Y+25	; 0x19
 4de:	7a 8d       	ldd	r23, Y+26	; 0x1a
 4e0:	ce 01       	movw	r24, r28
 4e2:	01 96       	adiw	r24, 0x01	; 1
 4e4:	0e 94 86 02 	call	0x50c	; 0x50c <vfprintf>
 4e8:	4d 81       	ldd	r20, Y+5	; 0x05
 4ea:	5e 81       	ldd	r21, Y+6	; 0x06
 4ec:	57 fd       	sbrc	r21, 7
 4ee:	0a c0       	rjmp	.+20     	; 0x504 <snprintf+0x58>
 4f0:	2f 81       	ldd	r18, Y+7	; 0x07
 4f2:	38 85       	ldd	r19, Y+8	; 0x08
 4f4:	42 17       	cp	r20, r18
 4f6:	53 07       	cpc	r21, r19
 4f8:	0c f4       	brge	.+2      	; 0x4fc <snprintf+0x50>
 4fa:	9a 01       	movw	r18, r20
 4fc:	f8 01       	movw	r30, r16
 4fe:	e2 0f       	add	r30, r18
 500:	f3 1f       	adc	r31, r19
 502:	10 82       	st	Z, r1
 504:	2e 96       	adiw	r28, 0x0e	; 14
 506:	e4 e0       	ldi	r30, 0x04	; 4
 508:	0c 94 41 05 	jmp	0xa82	; 0xa82 <__epilogue_restores__+0x1c>

0000050c <vfprintf>:
 50c:	ab e0       	ldi	r26, 0x0B	; 11
 50e:	b0 e0       	ldi	r27, 0x00	; 0
 510:	ec e8       	ldi	r30, 0x8C	; 140
 512:	f2 e0       	ldi	r31, 0x02	; 2
 514:	0c 94 17 05 	jmp	0xa2e	; 0xa2e <__prologue_saves__>
 518:	6c 01       	movw	r12, r24
 51a:	7b 01       	movw	r14, r22
 51c:	8a 01       	movw	r16, r20
 51e:	fc 01       	movw	r30, r24
 520:	17 82       	std	Z+7, r1	; 0x07
 522:	16 82       	std	Z+6, r1	; 0x06
 524:	83 81       	ldd	r24, Z+3	; 0x03
 526:	81 ff       	sbrs	r24, 1
 528:	cc c1       	rjmp	.+920    	; 0x8c2 <__DATA_REGION_LENGTH__+0xc2>
 52a:	ce 01       	movw	r24, r28
 52c:	01 96       	adiw	r24, 0x01	; 1
 52e:	3c 01       	movw	r6, r24
 530:	f6 01       	movw	r30, r12
 532:	93 81       	ldd	r25, Z+3	; 0x03
 534:	f7 01       	movw	r30, r14
 536:	93 fd       	sbrc	r25, 3
 538:	85 91       	lpm	r24, Z+
 53a:	93 ff       	sbrs	r25, 3
 53c:	81 91       	ld	r24, Z+
 53e:	7f 01       	movw	r14, r30
 540:	88 23       	and	r24, r24
 542:	09 f4       	brne	.+2      	; 0x546 <vfprintf+0x3a>
 544:	ba c1       	rjmp	.+884    	; 0x8ba <__DATA_REGION_LENGTH__+0xba>
 546:	85 32       	cpi	r24, 0x25	; 37
 548:	39 f4       	brne	.+14     	; 0x558 <vfprintf+0x4c>
 54a:	93 fd       	sbrc	r25, 3
 54c:	85 91       	lpm	r24, Z+
 54e:	93 ff       	sbrs	r25, 3
 550:	81 91       	ld	r24, Z+
 552:	7f 01       	movw	r14, r30
 554:	85 32       	cpi	r24, 0x25	; 37
 556:	29 f4       	brne	.+10     	; 0x562 <vfprintf+0x56>
 558:	b6 01       	movw	r22, r12
 55a:	90 e0       	ldi	r25, 0x00	; 0
 55c:	0e 94 7d 04 	call	0x8fa	; 0x8fa <fputc>
 560:	e7 cf       	rjmp	.-50     	; 0x530 <vfprintf+0x24>
 562:	91 2c       	mov	r9, r1
 564:	21 2c       	mov	r2, r1
 566:	31 2c       	mov	r3, r1
 568:	ff e1       	ldi	r31, 0x1F	; 31
 56a:	f3 15       	cp	r31, r3
 56c:	d8 f0       	brcs	.+54     	; 0x5a4 <vfprintf+0x98>
 56e:	8b 32       	cpi	r24, 0x2B	; 43
 570:	79 f0       	breq	.+30     	; 0x590 <vfprintf+0x84>
 572:	38 f4       	brcc	.+14     	; 0x582 <vfprintf+0x76>
 574:	80 32       	cpi	r24, 0x20	; 32
 576:	79 f0       	breq	.+30     	; 0x596 <vfprintf+0x8a>
 578:	83 32       	cpi	r24, 0x23	; 35
 57a:	a1 f4       	brne	.+40     	; 0x5a4 <vfprintf+0x98>
 57c:	23 2d       	mov	r18, r3
 57e:	20 61       	ori	r18, 0x10	; 16
 580:	1d c0       	rjmp	.+58     	; 0x5bc <vfprintf+0xb0>
 582:	8d 32       	cpi	r24, 0x2D	; 45
 584:	61 f0       	breq	.+24     	; 0x59e <vfprintf+0x92>
 586:	80 33       	cpi	r24, 0x30	; 48
 588:	69 f4       	brne	.+26     	; 0x5a4 <vfprintf+0x98>
 58a:	23 2d       	mov	r18, r3
 58c:	21 60       	ori	r18, 0x01	; 1
 58e:	16 c0       	rjmp	.+44     	; 0x5bc <vfprintf+0xb0>
 590:	83 2d       	mov	r24, r3
 592:	82 60       	ori	r24, 0x02	; 2
 594:	38 2e       	mov	r3, r24
 596:	e3 2d       	mov	r30, r3
 598:	e4 60       	ori	r30, 0x04	; 4
 59a:	3e 2e       	mov	r3, r30
 59c:	2a c0       	rjmp	.+84     	; 0x5f2 <vfprintf+0xe6>
 59e:	f3 2d       	mov	r31, r3
 5a0:	f8 60       	ori	r31, 0x08	; 8
 5a2:	1d c0       	rjmp	.+58     	; 0x5de <vfprintf+0xd2>
 5a4:	37 fc       	sbrc	r3, 7
 5a6:	2d c0       	rjmp	.+90     	; 0x602 <vfprintf+0xf6>
 5a8:	20 ed       	ldi	r18, 0xD0	; 208
 5aa:	28 0f       	add	r18, r24
 5ac:	2a 30       	cpi	r18, 0x0A	; 10
 5ae:	40 f0       	brcs	.+16     	; 0x5c0 <vfprintf+0xb4>
 5b0:	8e 32       	cpi	r24, 0x2E	; 46
 5b2:	b9 f4       	brne	.+46     	; 0x5e2 <vfprintf+0xd6>
 5b4:	36 fc       	sbrc	r3, 6
 5b6:	81 c1       	rjmp	.+770    	; 0x8ba <__DATA_REGION_LENGTH__+0xba>
 5b8:	23 2d       	mov	r18, r3
 5ba:	20 64       	ori	r18, 0x40	; 64
 5bc:	32 2e       	mov	r3, r18
 5be:	19 c0       	rjmp	.+50     	; 0x5f2 <vfprintf+0xe6>
 5c0:	36 fe       	sbrs	r3, 6
 5c2:	06 c0       	rjmp	.+12     	; 0x5d0 <vfprintf+0xc4>
 5c4:	8a e0       	ldi	r24, 0x0A	; 10
 5c6:	98 9e       	mul	r9, r24
 5c8:	20 0d       	add	r18, r0
 5ca:	11 24       	eor	r1, r1
 5cc:	92 2e       	mov	r9, r18
 5ce:	11 c0       	rjmp	.+34     	; 0x5f2 <vfprintf+0xe6>
 5d0:	ea e0       	ldi	r30, 0x0A	; 10
 5d2:	2e 9e       	mul	r2, r30
 5d4:	20 0d       	add	r18, r0
 5d6:	11 24       	eor	r1, r1
 5d8:	22 2e       	mov	r2, r18
 5da:	f3 2d       	mov	r31, r3
 5dc:	f0 62       	ori	r31, 0x20	; 32
 5de:	3f 2e       	mov	r3, r31
 5e0:	08 c0       	rjmp	.+16     	; 0x5f2 <vfprintf+0xe6>
 5e2:	8c 36       	cpi	r24, 0x6C	; 108
 5e4:	21 f4       	brne	.+8      	; 0x5ee <vfprintf+0xe2>
 5e6:	83 2d       	mov	r24, r3
 5e8:	80 68       	ori	r24, 0x80	; 128
 5ea:	38 2e       	mov	r3, r24
 5ec:	02 c0       	rjmp	.+4      	; 0x5f2 <vfprintf+0xe6>
 5ee:	88 36       	cpi	r24, 0x68	; 104
 5f0:	41 f4       	brne	.+16     	; 0x602 <vfprintf+0xf6>
 5f2:	f7 01       	movw	r30, r14
 5f4:	93 fd       	sbrc	r25, 3
 5f6:	85 91       	lpm	r24, Z+
 5f8:	93 ff       	sbrs	r25, 3
 5fa:	81 91       	ld	r24, Z+
 5fc:	7f 01       	movw	r14, r30
 5fe:	81 11       	cpse	r24, r1
 600:	b3 cf       	rjmp	.-154    	; 0x568 <vfprintf+0x5c>
 602:	98 2f       	mov	r25, r24
 604:	9f 7d       	andi	r25, 0xDF	; 223
 606:	95 54       	subi	r25, 0x45	; 69
 608:	93 30       	cpi	r25, 0x03	; 3
 60a:	28 f4       	brcc	.+10     	; 0x616 <vfprintf+0x10a>
 60c:	0c 5f       	subi	r16, 0xFC	; 252
 60e:	1f 4f       	sbci	r17, 0xFF	; 255
 610:	9f e3       	ldi	r25, 0x3F	; 63
 612:	99 83       	std	Y+1, r25	; 0x01
 614:	0d c0       	rjmp	.+26     	; 0x630 <vfprintf+0x124>
 616:	83 36       	cpi	r24, 0x63	; 99
 618:	31 f0       	breq	.+12     	; 0x626 <vfprintf+0x11a>
 61a:	83 37       	cpi	r24, 0x73	; 115
 61c:	71 f0       	breq	.+28     	; 0x63a <vfprintf+0x12e>
 61e:	83 35       	cpi	r24, 0x53	; 83
 620:	09 f0       	breq	.+2      	; 0x624 <vfprintf+0x118>
 622:	59 c0       	rjmp	.+178    	; 0x6d6 <vfprintf+0x1ca>
 624:	21 c0       	rjmp	.+66     	; 0x668 <vfprintf+0x15c>
 626:	f8 01       	movw	r30, r16
 628:	80 81       	ld	r24, Z
 62a:	89 83       	std	Y+1, r24	; 0x01
 62c:	0e 5f       	subi	r16, 0xFE	; 254
 62e:	1f 4f       	sbci	r17, 0xFF	; 255
 630:	88 24       	eor	r8, r8
 632:	83 94       	inc	r8
 634:	91 2c       	mov	r9, r1
 636:	53 01       	movw	r10, r6
 638:	13 c0       	rjmp	.+38     	; 0x660 <vfprintf+0x154>
 63a:	28 01       	movw	r4, r16
 63c:	f2 e0       	ldi	r31, 0x02	; 2
 63e:	4f 0e       	add	r4, r31
 640:	51 1c       	adc	r5, r1
 642:	f8 01       	movw	r30, r16
 644:	a0 80       	ld	r10, Z
 646:	b1 80       	ldd	r11, Z+1	; 0x01
 648:	36 fe       	sbrs	r3, 6
 64a:	03 c0       	rjmp	.+6      	; 0x652 <vfprintf+0x146>
 64c:	69 2d       	mov	r22, r9
 64e:	70 e0       	ldi	r23, 0x00	; 0
 650:	02 c0       	rjmp	.+4      	; 0x656 <vfprintf+0x14a>
 652:	6f ef       	ldi	r22, 0xFF	; 255
 654:	7f ef       	ldi	r23, 0xFF	; 255
 656:	c5 01       	movw	r24, r10
 658:	0e 94 72 04 	call	0x8e4	; 0x8e4 <strnlen>
 65c:	4c 01       	movw	r8, r24
 65e:	82 01       	movw	r16, r4
 660:	f3 2d       	mov	r31, r3
 662:	ff 77       	andi	r31, 0x7F	; 127
 664:	3f 2e       	mov	r3, r31
 666:	16 c0       	rjmp	.+44     	; 0x694 <vfprintf+0x188>
 668:	28 01       	movw	r4, r16
 66a:	22 e0       	ldi	r18, 0x02	; 2
 66c:	42 0e       	add	r4, r18
 66e:	51 1c       	adc	r5, r1
 670:	f8 01       	movw	r30, r16
 672:	a0 80       	ld	r10, Z
 674:	b1 80       	ldd	r11, Z+1	; 0x01
 676:	36 fe       	sbrs	r3, 6
 678:	03 c0       	rjmp	.+6      	; 0x680 <vfprintf+0x174>
 67a:	69 2d       	mov	r22, r9
 67c:	70 e0       	ldi	r23, 0x00	; 0
 67e:	02 c0       	rjmp	.+4      	; 0x684 <vfprintf+0x178>
 680:	6f ef       	ldi	r22, 0xFF	; 255
 682:	7f ef       	ldi	r23, 0xFF	; 255
 684:	c5 01       	movw	r24, r10
 686:	0e 94 67 04 	call	0x8ce	; 0x8ce <strnlen_P>
 68a:	4c 01       	movw	r8, r24
 68c:	f3 2d       	mov	r31, r3
 68e:	f0 68       	ori	r31, 0x80	; 128
 690:	3f 2e       	mov	r3, r31
 692:	82 01       	movw	r16, r4
 694:	33 fc       	sbrc	r3, 3
 696:	1b c0       	rjmp	.+54     	; 0x6ce <vfprintf+0x1c2>
 698:	82 2d       	mov	r24, r2
 69a:	90 e0       	ldi	r25, 0x00	; 0
 69c:	88 16       	cp	r8, r24
 69e:	99 06       	cpc	r9, r25
 6a0:	b0 f4       	brcc	.+44     	; 0x6ce <vfprintf+0x1c2>
 6a2:	b6 01       	movw	r22, r12
 6a4:	80 e2       	ldi	r24, 0x20	; 32
 6a6:	90 e0       	ldi	r25, 0x00	; 0
 6a8:	0e 94 7d 04 	call	0x8fa	; 0x8fa <fputc>
 6ac:	2a 94       	dec	r2
 6ae:	f4 cf       	rjmp	.-24     	; 0x698 <vfprintf+0x18c>
 6b0:	f5 01       	movw	r30, r10
 6b2:	37 fc       	sbrc	r3, 7
 6b4:	85 91       	lpm	r24, Z+
 6b6:	37 fe       	sbrs	r3, 7
 6b8:	81 91       	ld	r24, Z+
 6ba:	5f 01       	movw	r10, r30
 6bc:	b6 01       	movw	r22, r12
 6be:	90 e0       	ldi	r25, 0x00	; 0
 6c0:	0e 94 7d 04 	call	0x8fa	; 0x8fa <fputc>
 6c4:	21 10       	cpse	r2, r1
 6c6:	2a 94       	dec	r2
 6c8:	21 e0       	ldi	r18, 0x01	; 1
 6ca:	82 1a       	sub	r8, r18
 6cc:	91 08       	sbc	r9, r1
 6ce:	81 14       	cp	r8, r1
 6d0:	91 04       	cpc	r9, r1
 6d2:	71 f7       	brne	.-36     	; 0x6b0 <vfprintf+0x1a4>
 6d4:	e8 c0       	rjmp	.+464    	; 0x8a6 <__DATA_REGION_LENGTH__+0xa6>
 6d6:	84 36       	cpi	r24, 0x64	; 100
 6d8:	11 f0       	breq	.+4      	; 0x6de <vfprintf+0x1d2>
 6da:	89 36       	cpi	r24, 0x69	; 105
 6dc:	41 f5       	brne	.+80     	; 0x72e <vfprintf+0x222>
 6de:	f8 01       	movw	r30, r16
 6e0:	37 fe       	sbrs	r3, 7
 6e2:	07 c0       	rjmp	.+14     	; 0x6f2 <vfprintf+0x1e6>
 6e4:	60 81       	ld	r22, Z
 6e6:	71 81       	ldd	r23, Z+1	; 0x01
 6e8:	82 81       	ldd	r24, Z+2	; 0x02
 6ea:	93 81       	ldd	r25, Z+3	; 0x03
 6ec:	0c 5f       	subi	r16, 0xFC	; 252
 6ee:	1f 4f       	sbci	r17, 0xFF	; 255
 6f0:	08 c0       	rjmp	.+16     	; 0x702 <vfprintf+0x1f6>
 6f2:	60 81       	ld	r22, Z
 6f4:	71 81       	ldd	r23, Z+1	; 0x01
 6f6:	07 2e       	mov	r0, r23
 6f8:	00 0c       	add	r0, r0
 6fa:	88 0b       	sbc	r24, r24
 6fc:	99 0b       	sbc	r25, r25
 6fe:	0e 5f       	subi	r16, 0xFE	; 254
 700:	1f 4f       	sbci	r17, 0xFF	; 255
 702:	f3 2d       	mov	r31, r3
 704:	ff 76       	andi	r31, 0x6F	; 111
 706:	3f 2e       	mov	r3, r31
 708:	97 ff       	sbrs	r25, 7
 70a:	09 c0       	rjmp	.+18     	; 0x71e <vfprintf+0x212>
 70c:	90 95       	com	r25
 70e:	80 95       	com	r24
 710:	70 95       	com	r23
 712:	61 95       	neg	r22
 714:	7f 4f       	sbci	r23, 0xFF	; 255
 716:	8f 4f       	sbci	r24, 0xFF	; 255
 718:	9f 4f       	sbci	r25, 0xFF	; 255
 71a:	f0 68       	ori	r31, 0x80	; 128
 71c:	3f 2e       	mov	r3, r31
 71e:	2a e0       	ldi	r18, 0x0A	; 10
 720:	30 e0       	ldi	r19, 0x00	; 0
 722:	a3 01       	movw	r20, r6
 724:	0e 94 b9 04 	call	0x972	; 0x972 <__ultoa_invert>
 728:	88 2e       	mov	r8, r24
 72a:	86 18       	sub	r8, r6
 72c:	45 c0       	rjmp	.+138    	; 0x7b8 <vfprintf+0x2ac>
 72e:	85 37       	cpi	r24, 0x75	; 117
 730:	31 f4       	brne	.+12     	; 0x73e <vfprintf+0x232>
 732:	23 2d       	mov	r18, r3
 734:	2f 7e       	andi	r18, 0xEF	; 239
 736:	b2 2e       	mov	r11, r18
 738:	2a e0       	ldi	r18, 0x0A	; 10
 73a:	30 e0       	ldi	r19, 0x00	; 0
 73c:	25 c0       	rjmp	.+74     	; 0x788 <vfprintf+0x27c>
 73e:	93 2d       	mov	r25, r3
 740:	99 7f       	andi	r25, 0xF9	; 249
 742:	b9 2e       	mov	r11, r25
 744:	8f 36       	cpi	r24, 0x6F	; 111
 746:	c1 f0       	breq	.+48     	; 0x778 <vfprintf+0x26c>
 748:	18 f4       	brcc	.+6      	; 0x750 <vfprintf+0x244>
 74a:	88 35       	cpi	r24, 0x58	; 88
 74c:	79 f0       	breq	.+30     	; 0x76c <vfprintf+0x260>
 74e:	b5 c0       	rjmp	.+362    	; 0x8ba <__DATA_REGION_LENGTH__+0xba>
 750:	80 37       	cpi	r24, 0x70	; 112
 752:	19 f0       	breq	.+6      	; 0x75a <vfprintf+0x24e>
 754:	88 37       	cpi	r24, 0x78	; 120
 756:	21 f0       	breq	.+8      	; 0x760 <vfprintf+0x254>
 758:	b0 c0       	rjmp	.+352    	; 0x8ba <__DATA_REGION_LENGTH__+0xba>
 75a:	e9 2f       	mov	r30, r25
 75c:	e0 61       	ori	r30, 0x10	; 16
 75e:	be 2e       	mov	r11, r30
 760:	b4 fe       	sbrs	r11, 4
 762:	0d c0       	rjmp	.+26     	; 0x77e <vfprintf+0x272>
 764:	fb 2d       	mov	r31, r11
 766:	f4 60       	ori	r31, 0x04	; 4
 768:	bf 2e       	mov	r11, r31
 76a:	09 c0       	rjmp	.+18     	; 0x77e <vfprintf+0x272>
 76c:	34 fe       	sbrs	r3, 4
 76e:	0a c0       	rjmp	.+20     	; 0x784 <vfprintf+0x278>
 770:	29 2f       	mov	r18, r25
 772:	26 60       	ori	r18, 0x06	; 6
 774:	b2 2e       	mov	r11, r18
 776:	06 c0       	rjmp	.+12     	; 0x784 <vfprintf+0x278>
 778:	28 e0       	ldi	r18, 0x08	; 8
 77a:	30 e0       	ldi	r19, 0x00	; 0
 77c:	05 c0       	rjmp	.+10     	; 0x788 <vfprintf+0x27c>
 77e:	20 e1       	ldi	r18, 0x10	; 16
 780:	30 e0       	ldi	r19, 0x00	; 0
 782:	02 c0       	rjmp	.+4      	; 0x788 <vfprintf+0x27c>
 784:	20 e1       	ldi	r18, 0x10	; 16
 786:	32 e0       	ldi	r19, 0x02	; 2
 788:	f8 01       	movw	r30, r16
 78a:	b7 fe       	sbrs	r11, 7
 78c:	07 c0       	rjmp	.+14     	; 0x79c <vfprintf+0x290>
 78e:	60 81       	ld	r22, Z
 790:	71 81       	ldd	r23, Z+1	; 0x01
 792:	82 81       	ldd	r24, Z+2	; 0x02
 794:	93 81       	ldd	r25, Z+3	; 0x03
 796:	0c 5f       	subi	r16, 0xFC	; 252
 798:	1f 4f       	sbci	r17, 0xFF	; 255
 79a:	06 c0       	rjmp	.+12     	; 0x7a8 <vfprintf+0x29c>
 79c:	60 81       	ld	r22, Z
 79e:	71 81       	ldd	r23, Z+1	; 0x01
 7a0:	80 e0       	ldi	r24, 0x00	; 0
 7a2:	90 e0       	ldi	r25, 0x00	; 0
 7a4:	0e 5f       	subi	r16, 0xFE	; 254
 7a6:	1f 4f       	sbci	r17, 0xFF	; 255
 7a8:	a3 01       	movw	r20, r6
 7aa:	0e 94 b9 04 	call	0x972	; 0x972 <__ultoa_invert>
 7ae:	88 2e       	mov	r8, r24
 7b0:	86 18       	sub	r8, r6
 7b2:	fb 2d       	mov	r31, r11
 7b4:	ff 77       	andi	r31, 0x7F	; 127
 7b6:	3f 2e       	mov	r3, r31
 7b8:	36 fe       	sbrs	r3, 6
 7ba:	0d c0       	rjmp	.+26     	; 0x7d6 <vfprintf+0x2ca>
 7bc:	23 2d       	mov	r18, r3
 7be:	2e 7f       	andi	r18, 0xFE	; 254
 7c0:	a2 2e       	mov	r10, r18
 7c2:	89 14       	cp	r8, r9
 7c4:	58 f4       	brcc	.+22     	; 0x7dc <vfprintf+0x2d0>
 7c6:	34 fe       	sbrs	r3, 4
 7c8:	0b c0       	rjmp	.+22     	; 0x7e0 <vfprintf+0x2d4>
 7ca:	32 fc       	sbrc	r3, 2
 7cc:	09 c0       	rjmp	.+18     	; 0x7e0 <vfprintf+0x2d4>
 7ce:	83 2d       	mov	r24, r3
 7d0:	8e 7e       	andi	r24, 0xEE	; 238
 7d2:	a8 2e       	mov	r10, r24
 7d4:	05 c0       	rjmp	.+10     	; 0x7e0 <vfprintf+0x2d4>
 7d6:	b8 2c       	mov	r11, r8
 7d8:	a3 2c       	mov	r10, r3
 7da:	03 c0       	rjmp	.+6      	; 0x7e2 <vfprintf+0x2d6>
 7dc:	b8 2c       	mov	r11, r8
 7de:	01 c0       	rjmp	.+2      	; 0x7e2 <vfprintf+0x2d6>
 7e0:	b9 2c       	mov	r11, r9
 7e2:	a4 fe       	sbrs	r10, 4
 7e4:	0f c0       	rjmp	.+30     	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 7e6:	fe 01       	movw	r30, r28
 7e8:	e8 0d       	add	r30, r8
 7ea:	f1 1d       	adc	r31, r1
 7ec:	80 81       	ld	r24, Z
 7ee:	80 33       	cpi	r24, 0x30	; 48
 7f0:	21 f4       	brne	.+8      	; 0x7fa <vfprintf+0x2ee>
 7f2:	9a 2d       	mov	r25, r10
 7f4:	99 7e       	andi	r25, 0xE9	; 233
 7f6:	a9 2e       	mov	r10, r25
 7f8:	09 c0       	rjmp	.+18     	; 0x80c <__DATA_REGION_LENGTH__+0xc>
 7fa:	a2 fe       	sbrs	r10, 2
 7fc:	06 c0       	rjmp	.+12     	; 0x80a <__DATA_REGION_LENGTH__+0xa>
 7fe:	b3 94       	inc	r11
 800:	b3 94       	inc	r11
 802:	04 c0       	rjmp	.+8      	; 0x80c <__DATA_REGION_LENGTH__+0xc>
 804:	8a 2d       	mov	r24, r10
 806:	86 78       	andi	r24, 0x86	; 134
 808:	09 f0       	breq	.+2      	; 0x80c <__DATA_REGION_LENGTH__+0xc>
 80a:	b3 94       	inc	r11
 80c:	a3 fc       	sbrc	r10, 3
 80e:	11 c0       	rjmp	.+34     	; 0x832 <__DATA_REGION_LENGTH__+0x32>
 810:	a0 fe       	sbrs	r10, 0
 812:	06 c0       	rjmp	.+12     	; 0x820 <__DATA_REGION_LENGTH__+0x20>
 814:	b2 14       	cp	r11, r2
 816:	88 f4       	brcc	.+34     	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
 818:	28 0c       	add	r2, r8
 81a:	92 2c       	mov	r9, r2
 81c:	9b 18       	sub	r9, r11
 81e:	0e c0       	rjmp	.+28     	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
 820:	b2 14       	cp	r11, r2
 822:	60 f4       	brcc	.+24     	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
 824:	b6 01       	movw	r22, r12
 826:	80 e2       	ldi	r24, 0x20	; 32
 828:	90 e0       	ldi	r25, 0x00	; 0
 82a:	0e 94 7d 04 	call	0x8fa	; 0x8fa <fputc>
 82e:	b3 94       	inc	r11
 830:	f7 cf       	rjmp	.-18     	; 0x820 <__DATA_REGION_LENGTH__+0x20>
 832:	b2 14       	cp	r11, r2
 834:	18 f4       	brcc	.+6      	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
 836:	2b 18       	sub	r2, r11
 838:	02 c0       	rjmp	.+4      	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 83a:	98 2c       	mov	r9, r8
 83c:	21 2c       	mov	r2, r1
 83e:	a4 fe       	sbrs	r10, 4
 840:	10 c0       	rjmp	.+32     	; 0x862 <__DATA_REGION_LENGTH__+0x62>
 842:	b6 01       	movw	r22, r12
 844:	80 e3       	ldi	r24, 0x30	; 48
 846:	90 e0       	ldi	r25, 0x00	; 0
 848:	0e 94 7d 04 	call	0x8fa	; 0x8fa <fputc>
 84c:	a2 fe       	sbrs	r10, 2
 84e:	17 c0       	rjmp	.+46     	; 0x87e <__DATA_REGION_LENGTH__+0x7e>
 850:	a1 fc       	sbrc	r10, 1
 852:	03 c0       	rjmp	.+6      	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
 854:	88 e7       	ldi	r24, 0x78	; 120
 856:	90 e0       	ldi	r25, 0x00	; 0
 858:	02 c0       	rjmp	.+4      	; 0x85e <__DATA_REGION_LENGTH__+0x5e>
 85a:	88 e5       	ldi	r24, 0x58	; 88
 85c:	90 e0       	ldi	r25, 0x00	; 0
 85e:	b6 01       	movw	r22, r12
 860:	0c c0       	rjmp	.+24     	; 0x87a <__DATA_REGION_LENGTH__+0x7a>
 862:	8a 2d       	mov	r24, r10
 864:	86 78       	andi	r24, 0x86	; 134
 866:	59 f0       	breq	.+22     	; 0x87e <__DATA_REGION_LENGTH__+0x7e>
 868:	a1 fe       	sbrs	r10, 1
 86a:	02 c0       	rjmp	.+4      	; 0x870 <__DATA_REGION_LENGTH__+0x70>
 86c:	8b e2       	ldi	r24, 0x2B	; 43
 86e:	01 c0       	rjmp	.+2      	; 0x872 <__DATA_REGION_LENGTH__+0x72>
 870:	80 e2       	ldi	r24, 0x20	; 32
 872:	a7 fc       	sbrc	r10, 7
 874:	8d e2       	ldi	r24, 0x2D	; 45
 876:	b6 01       	movw	r22, r12
 878:	90 e0       	ldi	r25, 0x00	; 0
 87a:	0e 94 7d 04 	call	0x8fa	; 0x8fa <fputc>
 87e:	89 14       	cp	r8, r9
 880:	38 f4       	brcc	.+14     	; 0x890 <__DATA_REGION_LENGTH__+0x90>
 882:	b6 01       	movw	r22, r12
 884:	80 e3       	ldi	r24, 0x30	; 48
 886:	90 e0       	ldi	r25, 0x00	; 0
 888:	0e 94 7d 04 	call	0x8fa	; 0x8fa <fputc>
 88c:	9a 94       	dec	r9
 88e:	f7 cf       	rjmp	.-18     	; 0x87e <__DATA_REGION_LENGTH__+0x7e>
 890:	8a 94       	dec	r8
 892:	f3 01       	movw	r30, r6
 894:	e8 0d       	add	r30, r8
 896:	f1 1d       	adc	r31, r1
 898:	80 81       	ld	r24, Z
 89a:	b6 01       	movw	r22, r12
 89c:	90 e0       	ldi	r25, 0x00	; 0
 89e:	0e 94 7d 04 	call	0x8fa	; 0x8fa <fputc>
 8a2:	81 10       	cpse	r8, r1
 8a4:	f5 cf       	rjmp	.-22     	; 0x890 <__DATA_REGION_LENGTH__+0x90>
 8a6:	22 20       	and	r2, r2
 8a8:	09 f4       	brne	.+2      	; 0x8ac <__DATA_REGION_LENGTH__+0xac>
 8aa:	42 ce       	rjmp	.-892    	; 0x530 <vfprintf+0x24>
 8ac:	b6 01       	movw	r22, r12
 8ae:	80 e2       	ldi	r24, 0x20	; 32
 8b0:	90 e0       	ldi	r25, 0x00	; 0
 8b2:	0e 94 7d 04 	call	0x8fa	; 0x8fa <fputc>
 8b6:	2a 94       	dec	r2
 8b8:	f6 cf       	rjmp	.-20     	; 0x8a6 <__DATA_REGION_LENGTH__+0xa6>
 8ba:	f6 01       	movw	r30, r12
 8bc:	86 81       	ldd	r24, Z+6	; 0x06
 8be:	97 81       	ldd	r25, Z+7	; 0x07
 8c0:	02 c0       	rjmp	.+4      	; 0x8c6 <__DATA_REGION_LENGTH__+0xc6>
 8c2:	8f ef       	ldi	r24, 0xFF	; 255
 8c4:	9f ef       	ldi	r25, 0xFF	; 255
 8c6:	2b 96       	adiw	r28, 0x0b	; 11
 8c8:	e2 e1       	ldi	r30, 0x12	; 18
 8ca:	0c 94 33 05 	jmp	0xa66	; 0xa66 <__epilogue_restores__>

000008ce <strnlen_P>:
 8ce:	fc 01       	movw	r30, r24
 8d0:	05 90       	lpm	r0, Z+
 8d2:	61 50       	subi	r22, 0x01	; 1
 8d4:	70 40       	sbci	r23, 0x00	; 0
 8d6:	01 10       	cpse	r0, r1
 8d8:	d8 f7       	brcc	.-10     	; 0x8d0 <strnlen_P+0x2>
 8da:	80 95       	com	r24
 8dc:	90 95       	com	r25
 8de:	8e 0f       	add	r24, r30
 8e0:	9f 1f       	adc	r25, r31
 8e2:	08 95       	ret

000008e4 <strnlen>:
 8e4:	fc 01       	movw	r30, r24
 8e6:	61 50       	subi	r22, 0x01	; 1
 8e8:	70 40       	sbci	r23, 0x00	; 0
 8ea:	01 90       	ld	r0, Z+
 8ec:	01 10       	cpse	r0, r1
 8ee:	d8 f7       	brcc	.-10     	; 0x8e6 <strnlen+0x2>
 8f0:	80 95       	com	r24
 8f2:	90 95       	com	r25
 8f4:	8e 0f       	add	r24, r30
 8f6:	9f 1f       	adc	r25, r31
 8f8:	08 95       	ret

000008fa <fputc>:
 8fa:	0f 93       	push	r16
 8fc:	1f 93       	push	r17
 8fe:	cf 93       	push	r28
 900:	df 93       	push	r29
 902:	fb 01       	movw	r30, r22
 904:	23 81       	ldd	r18, Z+3	; 0x03
 906:	21 fd       	sbrc	r18, 1
 908:	03 c0       	rjmp	.+6      	; 0x910 <__stack+0x11>
 90a:	8f ef       	ldi	r24, 0xFF	; 255
 90c:	9f ef       	ldi	r25, 0xFF	; 255
 90e:	2c c0       	rjmp	.+88     	; 0x968 <__stack+0x69>
 910:	22 ff       	sbrs	r18, 2
 912:	16 c0       	rjmp	.+44     	; 0x940 <__stack+0x41>
 914:	46 81       	ldd	r20, Z+6	; 0x06
 916:	57 81       	ldd	r21, Z+7	; 0x07
 918:	24 81       	ldd	r18, Z+4	; 0x04
 91a:	35 81       	ldd	r19, Z+5	; 0x05
 91c:	42 17       	cp	r20, r18
 91e:	53 07       	cpc	r21, r19
 920:	44 f4       	brge	.+16     	; 0x932 <__stack+0x33>
 922:	a0 81       	ld	r26, Z
 924:	b1 81       	ldd	r27, Z+1	; 0x01
 926:	9d 01       	movw	r18, r26
 928:	2f 5f       	subi	r18, 0xFF	; 255
 92a:	3f 4f       	sbci	r19, 0xFF	; 255
 92c:	31 83       	std	Z+1, r19	; 0x01
 92e:	20 83       	st	Z, r18
 930:	8c 93       	st	X, r24
 932:	26 81       	ldd	r18, Z+6	; 0x06
 934:	37 81       	ldd	r19, Z+7	; 0x07
 936:	2f 5f       	subi	r18, 0xFF	; 255
 938:	3f 4f       	sbci	r19, 0xFF	; 255
 93a:	37 83       	std	Z+7, r19	; 0x07
 93c:	26 83       	std	Z+6, r18	; 0x06
 93e:	14 c0       	rjmp	.+40     	; 0x968 <__stack+0x69>
 940:	8b 01       	movw	r16, r22
 942:	ec 01       	movw	r28, r24
 944:	fb 01       	movw	r30, r22
 946:	00 84       	ldd	r0, Z+8	; 0x08
 948:	f1 85       	ldd	r31, Z+9	; 0x09
 94a:	e0 2d       	mov	r30, r0
 94c:	09 95       	icall
 94e:	89 2b       	or	r24, r25
 950:	e1 f6       	brne	.-72     	; 0x90a <__stack+0xb>
 952:	d8 01       	movw	r26, r16
 954:	16 96       	adiw	r26, 0x06	; 6
 956:	8d 91       	ld	r24, X+
 958:	9c 91       	ld	r25, X
 95a:	17 97       	sbiw	r26, 0x07	; 7
 95c:	01 96       	adiw	r24, 0x01	; 1
 95e:	17 96       	adiw	r26, 0x07	; 7
 960:	9c 93       	st	X, r25
 962:	8e 93       	st	-X, r24
 964:	16 97       	sbiw	r26, 0x06	; 6
 966:	ce 01       	movw	r24, r28
 968:	df 91       	pop	r29
 96a:	cf 91       	pop	r28
 96c:	1f 91       	pop	r17
 96e:	0f 91       	pop	r16
 970:	08 95       	ret

00000972 <__ultoa_invert>:
 972:	fa 01       	movw	r30, r20
 974:	aa 27       	eor	r26, r26
 976:	28 30       	cpi	r18, 0x08	; 8
 978:	51 f1       	breq	.+84     	; 0x9ce <__ultoa_invert+0x5c>
 97a:	20 31       	cpi	r18, 0x10	; 16
 97c:	81 f1       	breq	.+96     	; 0x9de <__ultoa_invert+0x6c>
 97e:	e8 94       	clt
 980:	6f 93       	push	r22
 982:	6e 7f       	andi	r22, 0xFE	; 254
 984:	6e 5f       	subi	r22, 0xFE	; 254
 986:	7f 4f       	sbci	r23, 0xFF	; 255
 988:	8f 4f       	sbci	r24, 0xFF	; 255
 98a:	9f 4f       	sbci	r25, 0xFF	; 255
 98c:	af 4f       	sbci	r26, 0xFF	; 255
 98e:	b1 e0       	ldi	r27, 0x01	; 1
 990:	3e d0       	rcall	.+124    	; 0xa0e <__ultoa_invert+0x9c>
 992:	b4 e0       	ldi	r27, 0x04	; 4
 994:	3c d0       	rcall	.+120    	; 0xa0e <__ultoa_invert+0x9c>
 996:	67 0f       	add	r22, r23
 998:	78 1f       	adc	r23, r24
 99a:	89 1f       	adc	r24, r25
 99c:	9a 1f       	adc	r25, r26
 99e:	a1 1d       	adc	r26, r1
 9a0:	68 0f       	add	r22, r24
 9a2:	79 1f       	adc	r23, r25
 9a4:	8a 1f       	adc	r24, r26
 9a6:	91 1d       	adc	r25, r1
 9a8:	a1 1d       	adc	r26, r1
 9aa:	6a 0f       	add	r22, r26
 9ac:	71 1d       	adc	r23, r1
 9ae:	81 1d       	adc	r24, r1
 9b0:	91 1d       	adc	r25, r1
 9b2:	a1 1d       	adc	r26, r1
 9b4:	20 d0       	rcall	.+64     	; 0x9f6 <__ultoa_invert+0x84>
 9b6:	09 f4       	brne	.+2      	; 0x9ba <__ultoa_invert+0x48>
 9b8:	68 94       	set
 9ba:	3f 91       	pop	r19
 9bc:	2a e0       	ldi	r18, 0x0A	; 10
 9be:	26 9f       	mul	r18, r22
 9c0:	11 24       	eor	r1, r1
 9c2:	30 19       	sub	r19, r0
 9c4:	30 5d       	subi	r19, 0xD0	; 208
 9c6:	31 93       	st	Z+, r19
 9c8:	de f6       	brtc	.-74     	; 0x980 <__ultoa_invert+0xe>
 9ca:	cf 01       	movw	r24, r30
 9cc:	08 95       	ret
 9ce:	46 2f       	mov	r20, r22
 9d0:	47 70       	andi	r20, 0x07	; 7
 9d2:	40 5d       	subi	r20, 0xD0	; 208
 9d4:	41 93       	st	Z+, r20
 9d6:	b3 e0       	ldi	r27, 0x03	; 3
 9d8:	0f d0       	rcall	.+30     	; 0x9f8 <__ultoa_invert+0x86>
 9da:	c9 f7       	brne	.-14     	; 0x9ce <__ultoa_invert+0x5c>
 9dc:	f6 cf       	rjmp	.-20     	; 0x9ca <__ultoa_invert+0x58>
 9de:	46 2f       	mov	r20, r22
 9e0:	4f 70       	andi	r20, 0x0F	; 15
 9e2:	40 5d       	subi	r20, 0xD0	; 208
 9e4:	4a 33       	cpi	r20, 0x3A	; 58
 9e6:	18 f0       	brcs	.+6      	; 0x9ee <__ultoa_invert+0x7c>
 9e8:	49 5d       	subi	r20, 0xD9	; 217
 9ea:	31 fd       	sbrc	r19, 1
 9ec:	40 52       	subi	r20, 0x20	; 32
 9ee:	41 93       	st	Z+, r20
 9f0:	02 d0       	rcall	.+4      	; 0x9f6 <__ultoa_invert+0x84>
 9f2:	a9 f7       	brne	.-22     	; 0x9de <__ultoa_invert+0x6c>
 9f4:	ea cf       	rjmp	.-44     	; 0x9ca <__ultoa_invert+0x58>
 9f6:	b4 e0       	ldi	r27, 0x04	; 4
 9f8:	a6 95       	lsr	r26
 9fa:	97 95       	ror	r25
 9fc:	87 95       	ror	r24
 9fe:	77 95       	ror	r23
 a00:	67 95       	ror	r22
 a02:	ba 95       	dec	r27
 a04:	c9 f7       	brne	.-14     	; 0x9f8 <__ultoa_invert+0x86>
 a06:	00 97       	sbiw	r24, 0x00	; 0
 a08:	61 05       	cpc	r22, r1
 a0a:	71 05       	cpc	r23, r1
 a0c:	08 95       	ret
 a0e:	9b 01       	movw	r18, r22
 a10:	ac 01       	movw	r20, r24
 a12:	0a 2e       	mov	r0, r26
 a14:	06 94       	lsr	r0
 a16:	57 95       	ror	r21
 a18:	47 95       	ror	r20
 a1a:	37 95       	ror	r19
 a1c:	27 95       	ror	r18
 a1e:	ba 95       	dec	r27
 a20:	c9 f7       	brne	.-14     	; 0xa14 <__ultoa_invert+0xa2>
 a22:	62 0f       	add	r22, r18
 a24:	73 1f       	adc	r23, r19
 a26:	84 1f       	adc	r24, r20
 a28:	95 1f       	adc	r25, r21
 a2a:	a0 1d       	adc	r26, r0
 a2c:	08 95       	ret

00000a2e <__prologue_saves__>:
 a2e:	2f 92       	push	r2
 a30:	3f 92       	push	r3
 a32:	4f 92       	push	r4
 a34:	5f 92       	push	r5
 a36:	6f 92       	push	r6
 a38:	7f 92       	push	r7
 a3a:	8f 92       	push	r8
 a3c:	9f 92       	push	r9
 a3e:	af 92       	push	r10
 a40:	bf 92       	push	r11
 a42:	cf 92       	push	r12
 a44:	df 92       	push	r13
 a46:	ef 92       	push	r14
 a48:	ff 92       	push	r15
 a4a:	0f 93       	push	r16
 a4c:	1f 93       	push	r17
 a4e:	cf 93       	push	r28
 a50:	df 93       	push	r29
 a52:	cd b7       	in	r28, 0x3d	; 61
 a54:	de b7       	in	r29, 0x3e	; 62
 a56:	ca 1b       	sub	r28, r26
 a58:	db 0b       	sbc	r29, r27
 a5a:	0f b6       	in	r0, 0x3f	; 63
 a5c:	f8 94       	cli
 a5e:	de bf       	out	0x3e, r29	; 62
 a60:	0f be       	out	0x3f, r0	; 63
 a62:	cd bf       	out	0x3d, r28	; 61
 a64:	09 94       	ijmp

00000a66 <__epilogue_restores__>:
 a66:	2a 88       	ldd	r2, Y+18	; 0x12
 a68:	39 88       	ldd	r3, Y+17	; 0x11
 a6a:	48 88       	ldd	r4, Y+16	; 0x10
 a6c:	5f 84       	ldd	r5, Y+15	; 0x0f
 a6e:	6e 84       	ldd	r6, Y+14	; 0x0e
 a70:	7d 84       	ldd	r7, Y+13	; 0x0d
 a72:	8c 84       	ldd	r8, Y+12	; 0x0c
 a74:	9b 84       	ldd	r9, Y+11	; 0x0b
 a76:	aa 84       	ldd	r10, Y+10	; 0x0a
 a78:	b9 84       	ldd	r11, Y+9	; 0x09
 a7a:	c8 84       	ldd	r12, Y+8	; 0x08
 a7c:	df 80       	ldd	r13, Y+7	; 0x07
 a7e:	ee 80       	ldd	r14, Y+6	; 0x06
 a80:	fd 80       	ldd	r15, Y+5	; 0x05
 a82:	0c 81       	ldd	r16, Y+4	; 0x04
 a84:	1b 81       	ldd	r17, Y+3	; 0x03
 a86:	aa 81       	ldd	r26, Y+2	; 0x02
 a88:	b9 81       	ldd	r27, Y+1	; 0x01
 a8a:	ce 0f       	add	r28, r30
 a8c:	d1 1d       	adc	r29, r1
 a8e:	0f b6       	in	r0, 0x3f	; 63
 a90:	f8 94       	cli
 a92:	de bf       	out	0x3e, r29	; 62
 a94:	0f be       	out	0x3f, r0	; 63
 a96:	cd bf       	out	0x3d, r28	; 61
 a98:	ed 01       	movw	r28, r26
 a9a:	08 95       	ret

00000a9c <_exit>:
 a9c:	f8 94       	cli

00000a9e <__stop_program>:
 a9e:	ff cf       	rjmp	.-2      	; 0xa9e <__stop_program>
